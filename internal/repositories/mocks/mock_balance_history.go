// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repositories/interfaces/balance_history.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/hakansahinxyz/crypto-tracker-backend/internal/models"
)

// MockBalanceHistoryRepository is a mock of BalanceHistoryRepository interface.
type MockBalanceHistoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceHistoryRepositoryMockRecorder
}

// MockBalanceHistoryRepositoryMockRecorder is the mock recorder for MockBalanceHistoryRepository.
type MockBalanceHistoryRepositoryMockRecorder struct {
	mock *MockBalanceHistoryRepository
}

// NewMockBalanceHistoryRepository creates a new mock instance.
func NewMockBalanceHistoryRepository(ctrl *gomock.Controller) *MockBalanceHistoryRepository {
	mock := &MockBalanceHistoryRepository{ctrl: ctrl}
	mock.recorder = &MockBalanceHistoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceHistoryRepository) EXPECT() *MockBalanceHistoryRepositoryMockRecorder {
	return m.recorder
}

// DeleteOldHistory mocks base method.
func (m *MockBalanceHistoryRepository) DeleteOldHistory(ctx context.Context, threshold int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOldHistory", ctx, threshold)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOldHistory indicates an expected call of DeleteOldHistory.
func (mr *MockBalanceHistoryRepositoryMockRecorder) DeleteOldHistory(ctx, threshold interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOldHistory", reflect.TypeOf((*MockBalanceHistoryRepository)(nil).DeleteOldHistory), ctx, threshold)
}

// GetActualBalance mocks base method.
func (m *MockBalanceHistoryRepository) GetActualBalance(ctx context.Context) (*models.BalanceHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActualBalance", ctx)
	ret0, _ := ret[0].(*models.BalanceHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetActualBalance indicates an expected call of GetActualBalance.
func (mr *MockBalanceHistoryRepositoryMockRecorder) GetActualBalance(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActualBalance", reflect.TypeOf((*MockBalanceHistoryRepository)(nil).GetActualBalance), ctx)
}

// GetBalanceHistory mocks base method.
func (m *MockBalanceHistoryRepository) GetBalanceHistory(ctx context.Context, limit int) ([]models.BalanceHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBalanceHistory", ctx, limit)
	ret0, _ := ret[0].([]models.BalanceHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBalanceHistory indicates an expected call of GetBalanceHistory.
func (mr *MockBalanceHistoryRepositoryMockRecorder) GetBalanceHistory(ctx, limit interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBalanceHistory", reflect.TypeOf((*MockBalanceHistoryRepository)(nil).GetBalanceHistory), ctx, limit)
}

// SaveBalanceHistory mocks base method.
func (m *MockBalanceHistoryRepository) SaveBalanceHistory(ctx context.Context, history *models.BalanceHistory) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveBalanceHistory", ctx, history)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveBalanceHistory indicates an expected call of SaveBalanceHistory.
func (mr *MockBalanceHistoryRepositoryMockRecorder) SaveBalanceHistory(ctx, history interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveBalanceHistory", reflect.TypeOf((*MockBalanceHistoryRepository)(nil).SaveBalanceHistory), ctx, history)
}
